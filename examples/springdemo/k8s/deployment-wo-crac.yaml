apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-boot-ddb-wo-crac
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-boot-ddb-wo-crac
  template:
    metadata:
      labels:
        app: spring-boot-ddb-wo-crac
    spec:
      serviceAccountName: spring-boot-ddb
      containers:
      - name: spring-boot-ddb-wo-crac
        image: SRVC_IMAGE_WO_CRAC
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        command: ["/bin/bash"]
        args: ["/opt/scripts/run-service-wo-crac.sh"]
        env:
        - name: SRVC_JAR_FILE_NAME
          value: CustomerService-0.0.1.jar
        - name: MODE
          valueFrom:
            configMapKeyRef:
              name: spring-demo-config
              key: mode
        - name: AMAZON_DYNAMO_DB_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: spring-demo-config
              key: amazon.dynamodb.endpoint
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 1
          periodSeconds: 1
          failureThreshold: 60
---
apiVersion: v1
kind: Service
metadata:
  name: spring-boot-ddb-wo-crac-service
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app: spring-boot-ddb-wo-crac
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: spring-boot-ddb-wo-crac-ingress
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: spring-boot-ddb-wo-crac-service
              port:
                number: 8080              